#!/bin/bash
#
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.
#

#
# Copyright (c) 2015, Joyent, Inc.
#

# All tests must pass!
set -o errexit

ROOT="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

if [[ ! -f "/lib/sdc/.sdc-test-no-production-data" ]]; then
    cat <<EOF
To run this test you must create the file:

    /lib/sdc/.sdc-test-no-production-data

after ensuring you have no production data on this machine.
EOF
    exit 2
fi

start_time=$(date +%s)

if [[ $(uname -s) != 'SunOS' ]]; then
    echo "FATAL: this can only run on SmartOS"
    exit 1
fi

if [[ $(zonename) != 'global' ]]; then
    echo "FATAL: this can only run in the GZ"
    exit 1
fi

if [[ $(id -u) != 0 ]]; then
    echo "FATAL: this can only run as root"
    exit 1
fi

failed_tests=0
failed_test_names=
set +o errexit
set -o pipefail
for t in $(ls tests/test.*.js); do
    ${ROOT}/node/bin/node --abort_on_uncaught_exception ${t} \
        | tee -a /tmp/test.output.$$
    if [[ $? != 0 ]]; then
        failed_tests=$((${failed_tests} + 1))
        failed_test_names="${failed_test_names} ${t}"
    fi
done
set +o pipefail
set -o errexit

end_time=$(date +%s)
elapsed=$((${end_time} - ${start_time}))

tests=$(grep "^# tests [0-9]" /tmp/test.output.$$ | cut -d ' ' -f3 | xargs | tr ' ' '+' | bc)
passed=$(grep "^# pass  [0-9]" /tmp/test.output.$$ | tr -s ' ' | cut -d ' ' -f3 | xargs | tr ' ' '+' | bc)
skipped=$(grep "^# skip  [0-9]" /tmp/test.output.$$ | tr -s ' ' | cut -d ' ' -f3 | xargs | tr ' ' '+' | bc)

[[ -z ${tests} ]] && tests=0
[[ -z ${passed} ]] && passed=0
[[ -z ${skipped} ]] && skipped=0

fail=$((${tests} - ${passed} - ${skipped}))
if [[ ${failed_tests} != 0 ]]; then
    fail=$((${fail} + ${failed_tests}))
fi

if [[ -t 1 ]]; then
    # We're on a terminal, so use color
    COLOR_GREEN="\033[32m"
    COLOR_RED="\033[31m"
    COLOR_ORANGE="\033[33m"
    COLOR_NORMAL="\033[39m"
else
    # no terminal, no color
    COLOR_GREEN=
    COLOR_RED=
    COLOR_ORANGE=
    COLOR_NORMAL=
fi

# Output the summary
echo "#"
echo "# TESTS COMPLETE IN ${elapsed} SECONDS, SUMMARY:"
echo "#"
echo -e "#   ${COLOR_GREEN}PASS: ${passed} / ${tests}${COLOR_NORMAL}"
if [[ ${skipped} -gt 0 ]]; then
    echo -e "#   ${COLOR_ORANGE}SKIP: ${skipped} / ${tests}${COLOR_NORMAL}"
fi
if [[ ${fail} -gt 0 ]]; then
    echo -e "#   ${COLOR_RED}FAIL: ${fail} / ${tests}${COLOR_NORMAL}"
    echo "#"
    echo "# FAILED TESTS:"
    echo "#"
    for t in ${failed_test_names}; do
        echo "#   - ${t}"
    done
fi
echo "#"

if [[ ${fail} -gt 0 ]]; then
    exit 1
fi

exit 0
